package com.web.spring;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.web.spring.entity.Custom;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.EntityTransaction;

//Spring Framework에서 빈으로 제공되는 것들을 사용하기 위해서는 CommandLineRunner 를 상속받으면 된다.
@SpringBootApplication
public class Boot04JpaApplication implements CommandLineRunner{
	
	@Autowired
	EntityManagerFactory entityManagerFactory; 
	
	@Override
	public void run(String... args) throws Exception {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		
		try {
			transaction.begin(); // 트랜젝션 시작
			
			//jpa 관련 코드를 순서대로 작성
			
			/* insert  : persist()  */
//			Custom c = new Custom();
//			c.setName("김종각2");
//			c.setPassword("4321");
//			c.setEmail("kim@gmail.com");
//		
//			entityManager.persist(c);
			
			/* select : find() */
//			Custom find1 = entityManager.find(Custom.class, 1);
//			System.out.println("id가 1인 고객 정보 : " + find1);
			
			
			/* delete : find()로 찾고, remove()하기 */
			Custom find3 = entityManager.find(Custom.class, 3);
			entityManager.remove(find3);
			
			
			transaction.commit(); // 트랜젝션 커밋
			
		}catch (Exception e) {
			transaction.rollback();
			
		}finally {
			entityManager.close();
		}
		
	}

	public static void main(String[] args) {
		SpringApplication.run(Boot04JpaApplication.class, args);
	}

}
