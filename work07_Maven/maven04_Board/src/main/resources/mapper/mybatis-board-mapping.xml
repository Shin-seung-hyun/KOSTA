<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 
<mapper namespace="ns.sql.Board">
	
	<!-- 게시글 등록 : no는 자동완성된다. board 테이블의 id도(member의 컬럼) 추가하기 -->
	<!-- MYSQL에 데이터가 입력될 때, no가 자동적으로 증가되도록 하려면?  
	
		PK가 DB에서 자동증가될 때 동기화를 시켜줘야 한다.
		useGeneratedKeys="true" 게시글 입력할 때, DB에서 자동으로 값을 증가시킨다.
		keyProperty="no" board.setNo() 를 통해 자동증가된 no가 board에 주입된다.
		결과적으로 pvo와 DB의 rvo 동기화가 진행된다. 
	-->
	<insert id="write" parameterType="board" useGeneratedKeys="true" keyProperty="no">
		INSERT INTO springboard(title, content, w_date, id)
		VALUES (#{title}, #{content}, curdate(), #{member.id})
	</insert>

	<!--   특정 게시글이 입력된 날짜를 디비에서 받아오는 쿼리문..-->
	<select id="selectByNoForDate" parameterType="int" resultType="string">
		SELECT w_date
		FROM springboard
		WHERE no = #{VALUE}
	</select>
	
	<resultMap id ="boardListRM" type="board">
		<id property="no" column="no"/>
		<result property="title" column="title"/>
		<result property="count" column="count"/>
		<result property="writeDate" column="w_date"/>
		<association property="member" javaType="member">
			<id property="id" column="id"/>
			<result property="name" column="name"/>
			<result property="password" column="password"/>
			<result property="address" column="address"/>
		</association>
	</resultMap> 
	
	<resultMap id="boardRM" type="board" extends="boardListRM">
		<result property="content" column="content"/>
		<result property="member.id" column="id"/>
	</resultMap>
	
	<!-- 전체 게시물 보기  -->
	<select id="getBoardList" resultMap="boardListRM">
		SELECT b.no, b.title, b.count, b.w_date, m.name
		FROM springboard b , member m
		WHERE b.id = m.id
		ORDER BY b.no DESC
	</select>
	
	<!-- 특정 게시글 상세보기 :: content, id(글쓴이가 삭제/수정할 수 있도록)는 꼭 들어간다. -->
	<select id="showContent" resultMap="boardRM" parameterType="int">
		SELECT b.no, b.title, b.count, b.w_date, b.content, m.id, m.name
		FROM springboard b , member m
		WHERE b.id = m.id AND b.no=#{VALUE}
		ORDER BY b.no DESC
	</select> 
	
	<delete id="deleteBoard" parameterType="int">	
		DELETE FROM springboard WHERE no=#{VALUE}
	</delete>
	
	<!-- 조회수 올리기  -->
	<update id="updateCount" parameterType="int">
		UPDATE springboard SET count = count+1 WHERE no=#{VALUE}	
	</update> 
	
	<update id="updateBoard" parameterType="board">
		UPDATE springboard SET title=#{title}, content=#{content}
		WHERE no=#{no}
	</update>
	
	
</mapper>