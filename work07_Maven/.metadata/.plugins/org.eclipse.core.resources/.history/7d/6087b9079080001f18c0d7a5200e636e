<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:property-placeholder location="classpath:config/dbconn.properties"/>
	
	<!--  1. DataSource API Bean 정의  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.mysql.driver}"/>
		<property name="url" value="${jdbc.mysql.url}"/>
		<property name="username" value="${jdbc.mysql.username}"/>
		<property name="password" value="${jdbc.mysql.password}"/>
	</bean>
	
	<!--  2. MyBatisFramework Bean 인 sqlSessionFactory API Bean 정의  -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="config/SqlMapConfig.xml"/>
	</bean>
	
	<!--  3. MyBatisFramework Bean 인 sqlSessionTemplate API Bean 정의  -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>
	
	<!-- HandlerMappgin 외에 빈이 하나 더 필요하다. 
	     결과 페이지의 물리적인 저장 위치와 확장자 정보를 지정하는 빈이 필요하다. -->
	<bean id ="viewResolver" class ="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 어노테이션이면 반드시 컨테이너가 대신 소스코드를 찾아야 하는 패키지를 명시해준다. -->
	<context:component-scan base-package="com.service.spring" />


</beans>
