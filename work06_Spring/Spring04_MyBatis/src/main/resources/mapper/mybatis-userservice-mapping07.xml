<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--
	1. ResultMap
	테이블 컬럼명과 필드명이 다를 때, ResultMap 사용법을 알아야 한다. 
	당연히 select 문에서만 사용된다.
	CamelCase 규칙을 따르지 않을 때 반드시 사용해야 한다.
	
	2. 동적 쿼리 사용법

-->
<mapper namespace="UserMapper07">

<!-- CamelCase 적용 -->
	<resultMap type="user" id="UserSelectRM">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="age" column="age" />
		<result property="grade" column="grade" />
		<result property="regDate" column="reg_date" />
		
	</resultMap>

<!-- 정적 쿼리 : where 절 조건이 달라짐에 따라서 새로운 쿼리를 만들어야 한다. -->
	<!-- 패스워드가  user01 인 사람을 검색 -->
	<select id="getUserList01" parameterType="user" resultMap="UserSelectRM" >
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users
		WHERE password = #{password}
		
	</select>

<!-- 동적 쿼리 -->
	<!-- where 절 조건이 달라져도 하나의 select 쿼리문으로 모든 쿼리문을 실행할 수 있다.
	
		userName이 홍길동이이고, 나이가 30살인 사람
		1) WHERE userName = "홍길동" and age = 30
		2) WHERE userName = "홍길동"
		3) WHERE age = 30
		4) 모든 사람 검색
		
		Select 문 하나로 1)~ 4)까지의 모든 쿼리문이 실행될 수 있다. .. 동적인 조건에 따라서 다르게 동작 
	 -->
	<select id="getUserList" parameterType="user" resultMap="UserSelectRM" >
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users
		<where>
			<if test ="userName != null">
				user_name LIKE #{userName}
			</if>
			<if test ="age != null">
				OR age LIKE #{age}
			</if>
		</where>
		ORDER BY user_id DESC
	</select>

</mapper>